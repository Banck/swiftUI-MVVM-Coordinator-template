//
//  ___FILENAME___
//  ___PROJECTNAME___
//
//  Created ___FULLUSERNAME___ on ___DATE___.
//  Copyright Â© ___YEAR___ ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Sakhabaev Egor @Banck
//  https://github.com/Banck/SwiftUI-MVVM-Coordinator-template
//

import UIKit
import SwiftUI
import uCore

#warning("Move to ___VARIABLE_moduleName___Interfaces target")
// MARK: - ___VARIABLE_moduleName___CoordinatorOutput
public struct ___VARIABLE_moduleName___CoordinatorOutput {

    // public let didSelectResult: (_ result: Int) -> Void
}

// MARK: - ___VARIABLE_moduleName___Coordinator
public final class ___VARIABLE_moduleName___Coordinator: BaseCoordinator {

    public typealias Dependencies = u___VARIABLE_moduleName___Dependencies

    private let dependencies: Dependencies
    private let output: ___VARIABLE_moduleName___CoordinatorOutput?
    private weak var input: ___VARIABLE_moduleName___ModuleInput?

    public init(
        router: Routable,
        dependencies: Dependencies,
        output: ___VARIABLE_moduleName___CoordinatorOutput? = nil
    ) {
        self.dependencies = dependencies
        self.output = output
        super.init(router: router)
    }
}

// MARK: - Coordinatable
extension ___VARIABLE_moduleName___Coordinator: Coordinatable {

    public func start() {
        var module = ___VARIABLE_moduleName___Configurator.createModule(dependencies: dependencies, output: nil)
        module.view.coordinator = self
        router.push(UIHostingController(rootView: module.view), animated: true)
        input = module.input
    }
}
